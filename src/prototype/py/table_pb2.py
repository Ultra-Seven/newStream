# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: table.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='table.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0btable.proto\"l\n\x05Table\x12\x1d\n\x06schema\x18\x01 \x01(\x0b\x32\r.Table.Schema\x12\x18\n\x04\x63ols\x18\x02 \x03(\x0b\x32\n.Table.Col\x1a\x12\n\x03\x43ol\x12\x0b\n\x03val\x18\x01 \x03(\x05\x1a\x16\n\x06Schema\x12\x0c\n\x04name\x18\x01 \x03(\tb\x06proto3')
)




_TABLE_COL = _descriptor.Descriptor(
  name='Col',
  full_name='Table.Col',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='val', full_name='Table.Col.val', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=81,
  serialized_end=99,
)

_TABLE_SCHEMA = _descriptor.Descriptor(
  name='Schema',
  full_name='Table.Schema',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Table.Schema.name', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=101,
  serialized_end=123,
)

_TABLE = _descriptor.Descriptor(
  name='Table',
  full_name='Table',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='schema', full_name='Table.schema', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cols', full_name='Table.cols', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_TABLE_COL, _TABLE_SCHEMA, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15,
  serialized_end=123,
)

_TABLE_COL.containing_type = _TABLE
_TABLE_SCHEMA.containing_type = _TABLE
_TABLE.fields_by_name['schema'].message_type = _TABLE_SCHEMA
_TABLE.fields_by_name['cols'].message_type = _TABLE_COL
DESCRIPTOR.message_types_by_name['Table'] = _TABLE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Table = _reflection.GeneratedProtocolMessageType('Table', (_message.Message,), dict(

  Col = _reflection.GeneratedProtocolMessageType('Col', (_message.Message,), dict(
    DESCRIPTOR = _TABLE_COL,
    __module__ = 'table_pb2'
    # @@protoc_insertion_point(class_scope:Table.Col)
    ))
  ,

  Schema = _reflection.GeneratedProtocolMessageType('Schema', (_message.Message,), dict(
    DESCRIPTOR = _TABLE_SCHEMA,
    __module__ = 'table_pb2'
    # @@protoc_insertion_point(class_scope:Table.Schema)
    ))
  ,
  DESCRIPTOR = _TABLE,
  __module__ = 'table_pb2'
  # @@protoc_insertion_point(class_scope:Table)
  ))
_sym_db.RegisterMessage(Table)
_sym_db.RegisterMessage(Table.Col)
_sym_db.RegisterMessage(Table.Schema)


# @@protoc_insertion_point(module_scope)
